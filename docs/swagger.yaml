definitions:
  userModel.UserDTO:
    properties:
      bio:
        type: string
      deactivatedAt:
        type: string
      email:
        type: string
      emailVerified:
        type: boolean
      id:
        type: integer
      isActive:
        description: Status
        type: boolean
      isBanned:
        type: boolean
      lastLogin:
        type: string
      locale:
        description: Preferences
        type: string
      profilePicture:
        description: Profile
        type: string
      timezone:
        type: string
      username:
        description: Authentication
        type: string
    type: object
  userModel.UserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /database/health:
    get:
      description: Gets the state of the connected database
      produces:
      - application/json
      responses:
        "200":
          description: Returns database health status
          schema:
            type: string
      summary: Returns the state of the connected database
      tags:
      - database
  /database/migrations:
    post:
      description: Runs the database migrations from GORM
      produces:
      - application/json
      responses:
        "200":
          description: Retuns success message
          schema:
            type: string
        "500":
          description: Retuns any errors
          schema: {}
      summary: Runs the migrations from GORM
      tags:
      - database
  /users:
    get:
      description: Gets all the users
      produces:
      - application/json
      responses:
        "200":
          description: Returns a pagenated list of users
          schema:
            $ref: '#/definitions/userModel.UserDTO'
      summary: Returns all the users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Creates a new user with the provided details
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userModel.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Returns the created user
          schema:
            $ref: '#/definitions/userModel.UserDTO'
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Creates a new user
      tags:
      - users
swagger: "2.0"
